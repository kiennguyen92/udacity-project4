# name: Frontend Continuous Deployment

# on:
#   push:
#     branches:    
#       - main
#   workflow_dispatch:

# env: 
#   NODE_VERSION: 18
#   WORK_DIR: starter/frontend
#   REPO: 330073786310.dkr.ecr.us-east-1.amazonaws.com/frontend
#   REACT_APP_MOVIE_API_URL: project4.io

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps: 

#       # Checkout code
#     - name: Checkout
#       uses: actions/checkout@v4

#     - name: Change to work directory
#       run: cd ${{ env.WORK_DIR }}

#       # Setup NodeJS
#       # Perform a cache action to restore cache before dependency install
#     - name: Setup NodeJS
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ env.NODE_VERSION}}
#         cache: 'npm'

#       # Install dependencies
#     - name: Install dependencies
#       run: npm ci

#       # Lint
#     - name: Lint
#       run: npm run lint
  
#   test:
#     runs-on: ubuntu-latest
#     steps: 

#       # Checkout code
#     - name: Checkout
#       uses: actions/checkout@v4

#     - name: Change to work directory
#       run: cd ${{ env.WORK_DIR }}

#       # Setup NodeJS
#       # Perform a cache action to restore cache before dependency install
#     - name: Setup NodeJS
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ env.NODE_VERSION}}
#         cache: 'npm'
#         cache-dependency-path: "${{ env.WORK_DIR }}/package.json"

#       # Install dependencies
#     - name: Install dependencies
#       run: npm ci

#       # Test
#     - name: Lint
#       run: npm run test

#   build:
#     runs-on: ubuntu-latest
#     needs:
#     - lint
#     - test
#     steps: 

#       # Checkout code
#     - name: Checkout
#       uses: actions/checkout@v4

#     - name: Login to Amazon ECR
#       uses: aws-actions/amazon-ecr-login@v2

#     - name: Change to work directory
#       run: cd ${{ env.WORK_DIR }}

#       # Build
#     - name: Build and push
#       uses: docker/build-push-action@v5
#       with:
#         push: true
#         tags:  ${{env.REPO}}:${{github.sha}}
#         build-args: REACT_APP_MOVIE_API_URL=${{env.REACT_APP_MOVIE_API_URL}}
#     - name: deploy to cluster
#       uses: kodermax/kubectl-aws-eks@main
#       env:
#         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: frontend
#         IMAGE_TAG: ${{ github.sha }}
#       with:
#         args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG